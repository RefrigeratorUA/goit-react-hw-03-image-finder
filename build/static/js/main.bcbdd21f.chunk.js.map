{"version":3,"sources":["components/Notification/Notification.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/Loader/Loader.js","components/Modal/Modal.js","services/pixabay-api.js","components/ImageGallery/ImageGallery.js","App.js","index.js"],"names":["NotificationContainer","position","autoClose","hideProgressBar","newestOnTop","pauseOnHover","closeOnClick","draggable","progress","undefined","transition","Zoom","pauseOnFocusLoss","rtl","showErrorNotification","message","objSettings","toast","error","Searchbar","state","query","handleChange","event","target","name","value","setState","handleSubmit","preventDefault","onSubmit","props","trim","toLowerCase","this","className","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","src","alt","largeImageURL","getLargeImageURL","onClick","Button","Loader","color","visible","height","width","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","onClose","handleClickBackdrop","currentTarget","window","addEventListener","removeEventListener","children","createPortal","fetchImages","page","fetch","then","response","ok","json","Promise","reject","Error","hits","ImageGallery","images","isLoading","btnStatus","showModal","imageLoading","imageAlt","setGallery","length","catch","finally","handleScroll","scrollTo","top","documentElement","scrollHeight","behavior","handleLoadNextPage","a","nextPage","handleSwitchModalStatus","handleGetLargeImageURL","handleSwitchImageLoading","prevProps","prevState","prevQuery","map","el","index","webformatURL","tags","onLoad","App","handleQueryFromSearchbar","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bcbdd21f.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { toast, ToastContainer, Zoom } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst NotificationContainer = ({ position = 'top-right', autoClose = 3000 }) => {\r\n  return (\r\n    <ToastContainer\r\n      position={position}\r\n      autoClose={autoClose}\r\n      hideProgressBar={false}\r\n      newestOnTop={false}\r\n      pauseOnHover={true}\r\n      closeOnClick={true}\r\n      draggable={true}\r\n      progress={undefined}\r\n      transition={Zoom}\r\n      pauseOnFocusLoss\r\n      rtl={false}\r\n    />\r\n  );\r\n};\r\n\r\nconst showErrorNotification = (message, objSettings) => {\r\n  toast.error(message, objSettings);\r\n};\r\n\r\nNotificationContainer.propTypes = {\r\n  position: PropTypes.string,\r\n  autoClose: PropTypes.number,\r\n};\r\n\r\nexport { NotificationContainer, showErrorNotification };\r\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { showErrorNotification } from '../Notification';\n\nclass Searchbar extends Component {\n  state = {\n    query: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { query } = this.state;\n    const { onSubmit } = this.props;\n    if (!query.trim()) {\n      showErrorNotification('Input search query.', { position: 'top-center' });\n      return this.setState({ query: '' });\n    }\n    onSubmit(query.trim().toLowerCase());\n    this.setState({ query: '' });\n  };\n\n  render() {\n    const { query } = this.state;\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            name=\"query\"\n            value={query}\n            onChange={this.handleChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default Searchbar;\n","import PropTypes from 'prop-types';\n\nconst ImageGalleryItem = ({ src, alt, largeImageURL, getLargeImageURL }) => {\n  return (\n    <li\n      className=\"ImageGalleryItem\"\n      onClick={() => {\n        getLargeImageURL(largeImageURL, alt);\n      }}\n    >\n      <img src={src} alt={alt} className=\"ImageGalleryItem-image\" />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  src: PropTypes.string,\n  alt: PropTypes.string,\n  largeImageURL: PropTypes.string,\n  getLargeImageURL: PropTypes.func,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\n\nconst Button = ({ onClick }) => {\n  return (\n    <button type=\"button\" className=\"Button\" onClick={() => onClick()}>\n      Load more\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import PropTypes from 'prop-types';\r\nimport LoaderSpinner from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nconst Loader = ({ type = 'ThreeDots', color = '#000', className = 'loader' }) => {\r\n  return (\r\n    <LoaderSpinner\r\n      visible=\"true\"\r\n      type={type}\r\n      color={color}\r\n      height={50}\r\n      width={50}\r\n      // timeout={3000} //3 secs\r\n      className={className}\r\n    />\r\n  );\r\n};\r\n\r\nLoader.propTypes = {\r\n  type: PropTypes.string,\r\n  color: PropTypes.string,\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default Loader;\r\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n  handleClickBackdrop = e => {\n    if (e.target === e.currentTarget) this.props.onClose();\n  };\n\n  render() {\n    const { children } = this.props;\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleClickBackdrop}>\n        <div className=\"Modal\">{children}</div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func,\n};\n\nexport default Modal;\n","const BASE_URL = 'https://pixabay.com/api/?image_type=photo&orientation=horizontal';\nconst API_KEY = '19265918-53e7e1b4cc966fb2ac418e7ff';\nconst IMAGES_PER_PAGE = 12;\n\nfunction fetchImages(query, page) {\n  return fetch(`${BASE_URL}&key=${API_KEY}&q=${query}&page=${page}&per_page=${IMAGES_PER_PAGE}`)\n    .then(response => {\n      if (response.ok) return response.json();\n      return Promise.reject(new Error(`По запросу \"${query}\" ничего не найдено!`));\n    })\n    .then(({ hits }) => hits);\n}\n\nexport { fetchImages };\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport Button from '../Button';\nimport Loader from '../Loader';\nimport Modal from '../Modal';\nimport { fetchImages } from '../../services/pixabay-api';\n\nclass ImageGallery extends Component {\n  static propTypes = {\n    query: PropTypes.string,\n  };\n\n  state = {\n    query: this.props.query,\n    page: 1,\n    images: [],\n    error: null,\n    isLoading: false,\n    btnStatus: false,\n    showModal: false,\n    imageLoading: false,\n    largeImageURL: '',\n    imageAlt: '',\n  };\n  async componentDidUpdate(prevProps, prevState) {\n    const { query: prevQuery } = prevProps;\n    const { query } = this.props;\n\n    if (prevQuery !== query) {\n      await this.setState({\n        images: [],\n        page: 1,\n        query,\n        isLoading: true,\n        btnStatus: false,\n        error: null,\n      });\n      await this.setGallery();\n    }\n  }\n\n  setGallery = () => {\n    const { query, page } = this.state;\n    fetchImages(query, page)\n      .then(images => {\n        this.setState({ images: [...this.state.images, ...images] });\n        if (images.length > 0) this.setState({ btnStatus: true });\n      })\n      .catch(error => {\n        this.setState({ error });\n      })\n      .finally(() => {\n        this.handleScroll();\n        this.setState({ isLoading: false });\n      });\n  };\n\n  handleScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  handleLoadNextPage = async () => {\n    const nextPage = this.state.page + 1;\n    await this.setState({ page: nextPage, isLoading: true, btnStatus: false, error: null });\n    await this.setGallery();\n  };\n\n  handleSwitchModalStatus = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal, imageLoading: true }));\n  };\n  handleGetLargeImageURL = (largeImageURL, imageAlt) => {\n    this.handleSwitchModalStatus();\n    largeImageURL ? this.setState({ largeImageURL }) : this.setState({ largeImageURL: '' });\n    imageAlt ? this.setState({ imageAlt }) : this.setState({ imageAlt: '' });\n  };\n  handleSwitchImageLoading = () => {\n    this.setState(({ imageLoading }) => ({ imageLoading: false }));\n  };\n\n  render() {\n    const {\n      images,\n      isLoading,\n      btnStatus,\n      showModal,\n      largeImageURL,\n      imageAlt,\n      error,\n      imageLoading,\n    } = this.state;\n    return (\n      <>\n        {error ? (\n          <h1>{error.message}</h1>\n        ) : (\n          <ul className=\"ImageGallery\">\n            {images.map((el, index) => {\n              const { webformatURL, tags, largeImageURL } = el;\n              return (\n                <ImageGalleryItem\n                  key={index}\n                  src={webformatURL}\n                  alt={tags}\n                  largeImageURL={largeImageURL}\n                  getLargeImageURL={this.handleGetLargeImageURL}\n                />\n              );\n            })}\n          </ul>\n        )}\n        {isLoading && <Loader type=\"Bars\" color=\"#3f51b5\" className=\"loader\" />}\n        {/* btnStatus оставил, т.к. если рендерить Button по условию (!isLoading & this.state.image.length>0) \n        получится, что после того, как бекенд отдаст все картинки по запросу this.state.image.length будет больше 0 \n        и кнопка будет отображаться. При этом на бекенде картинок уже нет */}\n        {btnStatus && <Button onClick={this.handleLoadNextPage} />}\n        {showModal && (\n          <Modal onClose={this.handleSwitchModalStatus}>\n            <>\n              {imageLoading && <Loader type=\"ThreeDots\" color=\"#fff\" className=\"loaderModal\" />}\n              <img src={largeImageURL} alt={imageAlt} onLoad={this.handleSwitchImageLoading} />\n            </>\n          </Modal>\n        )}\n      </>\n    );\n  }\n}\n\nexport default ImageGallery;\n","import { Component } from 'react';\nimport { NotificationContainer } from './components/Notification';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\n\nexport default class App extends Component {\n  state = {\n    query: '',\n  };\n\n  handleQueryFromSearchbar = query => {\n    this.setState({ query });\n  };\n\n  render() {\n    const { query } = this.state;\n    return (\n      <>\n        <Searchbar onSubmit={this.handleQueryFromSearchbar} />\n        <ImageGallery query={query} />\n        <NotificationContainer />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}